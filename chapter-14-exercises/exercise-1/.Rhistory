install.packages("jsonlite")
# Load the httr and jsonlite libraries for accessing data
# You can also load `dplyr` if you wish to use it
library(jsonlite)
library(httr)
# Create a variable base_uri that stores the base URI (as a string) for the
# Github API (https://api.github.com)
base_uri <- "https://api.github.com"
# Under the "Repositories" category of the API documentation, find the endpoint
# that will list _repos in an organization_. Then create a variable named
# `org_resource` that stores the endpoint for the `programming-for-data-science`
# organization repos (this is the _path_ to the resource of interest).
org_resource <- "/orgs/programming-for-data-science"
GET(paste0(base_uri, org_resource))
base_uri_org_resource <- GET(paste0(base_uri, org_resource))
print(base_uri_org_resource)
# Extract the content of the response using the `content()` function, saving it
# in a variable.
data_science_api_content <- content(base_uri_org_resource)
View(base_uri_org_resource)
# Convert the content variable from a JSON string into a data frame.
is.data.frame(data_science_api_content)
# Convert the content variable from a JSON string into a data frame.
as.data.frame(data_science_api_content)
str(data_science_api_content)
View(base_uri_org_resource)
# Convert the content variable from a JSON string into a data frame.
as.data.frame(data_science_api_content)
org_resource <- "/repos/programming-for-data-science/book-exercises"
base_uri_org_resource <- GET(paste0(base_uri, org_resource))
print(base_uri_org_resource)
View(base_uri_org_resource)
# Extract the content of the response using the `content()` function, saving it
# in a variable.
data_science_api_content <- content(content)
data_science_api_content <- content(base_uri_org_resource)
as.data.frame(data_science_api_content)
str(data_science_api_content)
data_science_api_content <- content(base_uri_org_resource, "text")
# Convert the content variable from a JSON string into a data frame.
str(data_science_api_content)
# Convert the content variable from a JSON string into a data frame.
ds_api_list <- fromJSON(data_science_api_content)
View(ds_api_list)
print(ds_api_list)
View(ds_api_list)
View(ds_api_list)
names(ds_api_list)
is.data.frame(ds_api_list$organization)
as.data.frame(ds_api_list$organization)
as.data.frame(ds_api_content)
as.data.frame(data_science_api_content)
as.data.frame(ds_api_list)
as.data.frame(ds_api_list$organization)
search_endpoint <- "search/repositories?q={query}{&page,per_page,sort,order}"
query_params <- list(list)
GET(paste0(base_uri, search_endpoint, query_params))
search_endpoint <- "/search/repositories?q="
GET(paste0(base_uri, search_endpoint, query_params))
query_params <- list(lists)
# Search queries require a query parameter (for what to search for). Create a
# `query_params` list variable that specifies an appropriate key and value for
# the search term (you can search for anything you want!)
query_params <- list(list)
GET(paste0(base_uri, search_endpoint, query_params))
GET(paste0(base_uri, search_endpoint, query = query_params))
is.data.frame(list_thing)
list_thing <- GET(paste0(base_uri, search_endpoint, query = query_params))
is.data.frame(list_thing)
as.data.frame(list_thing$items)
list_thing_df <- as.data.frame(list_thing$items)
# How many search repos did your search find? (Hint: check the list names to
# find an appropriate value).
names(list_thing_df)
print(ds_api_list)
print(list_thing)
search_endpoint <- "/search/repositories?q={query}"
query_params <- list(list)
list_thing <- GET(paste0(base_uri, search_endpoint, query = query_params))
print(list_thing)
search_endpoint <- "/search/repositories?q="
query_params <- list(list)
query_params <- list("list")
list_thing <- GET(paste0(base_uri, search_endpoint, query = query_params))
print(list_thing)
is.data.frame(list_thing)
list_thing_df <- as.data.frame(list_thing$items)
names(list_thing_df)
list_thing_df <- as.data.frame(list_thing)
list_thing_df <- as.data.frame(list_thing$items)
as.list(list_thing)
View(list_thing)
list_thing_text <- content(list_thing, "text")
View(list_thing_text)
list_thing_data <- fromJSON(list_thing_text)
View(list_thing_data)
list_thing_df <- as.data.frame(list_thing$items)
View(list_thing_df)
items <- list_thing_data$text
View(list_thing_data)
is.data.frame(items)
View(list_thing_data)
items <- list_thing_data$items
search_endpoint <- "/search/repositories?q="
# Search queries require a query parameter (for what to search for). Create a
# `query_params` list variable that specifies an appropriate key and value for
# the search term (you can search for anything you want!)
query_params <- list("list")
# Send a GET request to the `search_endpoint`--including your params list as the
# `query`. Print the response to show that your request worked.
list_thing <- GET(paste0(base_uri, search_endpoint, query = query_params))
print(list_thing)
# Extract the content of the response and convert it from a JSON string into a
# data frame.
list_thing_text <- content(list_thing, "text")
list_thing_data <- fromJSON(list_thing_text)
items <- list_thing_data$items
is.data.frame(items)
base_uri <- "https://api.github.com"
search_endpoint <- "/search/repositories?q="
# Search queries require a query parameter (for what to search for). Create a
# `query_params` list variable that specifies an appropriate key and value for
# the search term (you can search for anything you want!)
query_params <- list("list")
# Send a GET request to the `search_endpoint`--including your params list as the
# `query`. Print the response to show that your request worked.
list_thing <- GET(paste0(base_uri, search_endpoint, query = query_params))
print(list_thing)
# Extract the content of the response and convert it from a JSON string into a
# data frame.
list_thing_text <- content(list_thing, "text")
list_thing_data <- fromJSON(list_thing_text)
items <- list_thing_data$items
items <- list_thing_data$items
is.data.frame(items)
# How many search repos did your search find? (Hint: check the list names to
# find an appropriate value).
names(items)
org_resource <- "/repos/programming-for-data-science/book-exercises"
# Send a GET request to this endpoint (the `base_uri` followed by the
# `org_resource` path). Print the response to show that your request worked.
# (The listed URI will also allow you to inspect the JSON in the browser easily).
base_uri_org_resource <- GET(paste0(base_uri, org_resource))
print(base_uri_org_resource)
ds_api_list <- fromJSON(data_science_api_content)
data_science_api_content <- content(base_uri_org_resource, "text")
ds_api_list <- fromJSON(data_science_api_content)
names(ds_api_list)
is.data.frame(organization)
is.data.frame("organization")
